name: TeaMates CI/CD

on:
  push:
    branches: ['**']

permissions:
  id-token: write
  contents: read

env:
  AWS_REGION: ap-southeast-1
  ECR_REGISTRY: 376907302485.dkr.ecr.ap-southeast-1.amazonaws.com

# Define matrix once
jobs:
  define:
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}
    steps:
      - id: set-matrix
        run: |
          echo "matrix={\"service\":[\"order-service\",\"order-processing-service\",\"notification-service\"]}" >> $GITHUB_OUTPUT

  # Stage 1: Build jars per service
  build:
    needs: define
    runs-on: ubuntu-latest
    strategy:
      matrix: ${{fromJson(needs.define.outputs.matrix)}}

    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4

      - name: ☕ Set up JDK 21
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: '21'

      - name: 🔨 Build ${{ matrix.service }}
        run: ./mvnw -B clean package -pl ${{ matrix.service }} -am -DskipTests

      - name: 📦 Upload ${{ matrix.service }} jar
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.service }}-jar
          path: |
            ${{ matrix.service }}/target/*.jar
            !**/*-sources.jar
            !**/*-javadoc.jar

  # Stage 2: Docker build
  docker-build:
    needs: build
    runs-on: ubuntu-latest
    strategy:
      matrix:
        service: [order-service, order-processing-service, notification-service]

    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4

      - name: ⬇️ Download ${{ matrix.service }} artifact
        uses: actions/download-artifact@v4
        with:
          name: ${{ matrix.service }}-jar

      - name: 🔐 Login to Amazon ECR
        uses: aws-actions/amazon-ecr-login@v2

      - name: 🐳 Build Docker image for ${{ matrix.service }}
        run: |
          docker build -f .docker/Dockerfile \
            --build-arg SERVICE_NAME=${{ matrix.service }} \
            -t $ECR_REGISTRY/${{ matrix.service }}:${GITHUB_SHA} .

  # Stage 3: Push Docker image
  docker-push:
    needs: docker-build
    runs-on: ubuntu-latest
    strategy:
      matrix:
        service: [order-service, order-processing-service, notification-service]

    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4

      - name: 🔐 Configure AWS credentials using OIDC
        uses: aws-actions/configure-aws-credentials@v2
        with:
          role-to-assume: arn:aws:iam::376907302485:role/AWS_LABS_OIDC_DEPLOYER
          aws-region: ${{ env.AWS_REGION }}

      - name: 🔐 Login to Amazon ECR
        uses: aws-actions/amazon-ecr-login@v2

      - name: 🚀 Push Docker image for ${{ matrix.service }}
        run: |
          docker push $ECR_REGISTRY/${{ matrix.service }}:${GITHUB_SHA}
