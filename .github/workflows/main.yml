# .github/workflows/main.yml
name: TeaMates CI/CD

on:
  push:
    branches: ['**']   # trigger on every branch

permissions:
  id-token: write
  contents: read

env:
  AWS_REGION: ap-southeast-1
  ECR_REGISTRY: 376907302485.dkr.ecr.ap-southeast-1.amazonaws.com

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        service: &service_list
          - order-service
          - order-processing-service
          - notification-service

    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4

      - name: ☕ Set up Java 21
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: '21'

      - name: 🔨 Build ${{ matrix.service }}
        run: |
          ./mvnw -B clean package \
            -pl ${{ matrix.service }} -am \
            -DskipTests

      - name: 📦 Upload ${{ matrix.service }} JAR
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.service }}-jar
          path: ${{ matrix.service }}/target/*.jar

  docker-build:
    needs: build
    runs-on: ubuntu-latest
    strategy:
      matrix:
        service: *service_list

    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4

      - name: ⬇️ Download ${{ matrix.service }} JAR
        uses: actions/download-artifact@v4
        with:
          name: ${{ matrix.service }}-jar
          path: ${{ matrix.service }}/target

      - name: 🐳 Build Docker image for ${{ matrix.service }}
        run: |
          JAR_PATH=${{ matrix.service }}/target/*.jar
          IMAGE=$ECR_REGISTRY/${{ matrix.service }}:${{ github.sha }}

          docker build \
            -f ./.docker/Dockerfile \
            --build-arg JAR_FILE=$JAR_PATH \
            -t $IMAGE \
            .

          docker save $IMAGE -o image-${{ matrix.service }}.tar

      - name: 📦 Upload image tar
        uses: actions/upload-artifact@v4
        with:
          name: image-${{ matrix.service }}-tar
          path: image-${{ matrix.service }}.tar

  docker-push:
    needs: docker-build
    runs-on: ubuntu-latest
    strategy:
      matrix:
        service: *service_list

    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4

      - name: ⬇️ Download image tar for ${{ matrix.service }}
        uses: actions/download-artifact@v4
        with:
          name: image-${{ matrix.service }}-tar
          path: .

      - name: 🔐 Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          role-to-assume: arn:aws:iam::376907302485:role/AWS_LABS_OIDC_DEPLOYER
          aws-region: ${{ env.AWS_REGION }}

      - name: 🔐 Login to Amazon ECR
        uses: aws-actions/amazon-ecr-login@v2

      - name: 🚀 Load & push ${{ matrix.service }} to ECR
        run: |
          IMAGE=$ECR_REGISTRY/${{ matrix.service }}:${{ github.sha }}
          docker load -i image-${{ matrix.service }}.tar
          docker push $IMAGE
