name: Reusable TeaMates CI/CD

on:
  workflow_call:
    inputs:
      services:
        type: string
        required: true
      ecr_registry:
        type: string
        required: true
      aws_region:
        type: string
        required: true
    secrets:
      OIDC_ROLE:
        required: true

jobs:
  compile:
    name: Compile Services
    runs-on: ubuntu-latest
    strategy:
      matrix:
        service: ${{ fromJson(inputs.services) }}
    steps:
      - name: ðŸ“¥ Checkout code
        uses: actions/checkout@v4

      - name: â˜• Set up Java 21
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: '21'

      - name: ðŸ”¨ Compile ${{ matrix.service }}
        run: ./mvnw -B clean compile -pl ${{ matrix.service }} -am -DskipTests
  build-and-push:
    name: Build JAR & Push Docker
    needs: compile
    runs-on: ubuntu-latest
    strategy:
      matrix:
        service: ${{ fromJson(inputs.services) }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Java
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: '21'

      - name: Compile ${{ matrix.service }}
        run: ./mvnw -B clean package -pl ${{ matrix.service }} -am -DskipTests

      - name: AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          role-to-assume: ${{ secrets.OIDC_ROLE }}
          aws-region: ${{ inputs.aws_region }}

      - name: ECR login
        uses: aws-actions/amazon-ecr-login@v2

      - name: Build & push Docker image
        run: |
          IMAGE=${{ inputs.ecr_registry }}/${{ matrix.service }}:${{ github.sha }}
          docker build \
            -f .docker/Dockerfile \
            --build-arg JAR_FILE=${{ matrix.service }}/target/*.jar \
            -t $IMAGE .
          docker push $IMAGE
    



